{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","css","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,gJCkCHC,EAhCD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KACR,CACIC,KAAKF,EACLG,OAAOL,EAAMC,YAAYC,KAKrC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACCC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEjBC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,OAWX,OACAI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAItB,OAChBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaU,OAAOC,WAAWtB,EAAMuB,OAAOC,QAAQ,uCCrBhEC,8LAEEC,KAAK1B,MAAM2B,cAAcD,KAAK1B,MAAM4B,MAAOF,KAAK1B,MAAM6B,yCAItD,IAAIC,EAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MASb,OARIL,KAAK1B,MAAMgC,UACXF,EAASJ,KAAK1B,MAAM8B,OAAOvB,IAAI,SAAAR,GAAK,OAC5BU,EAAAC,EAAAC,cAACb,EAAD,CACIoB,IAAKnB,EAAMkC,GACXhC,YAAaF,EAAME,YACnBsB,MAAOxB,EAAMwB,WAIzBd,EAAAC,EAAAC,cAAA,WACKmB,UAjBII,aAsCNC,sBAfS,SAAAC,GACpB,MAAM,CACFN,OAAQM,EAAMrC,MAAM+B,OACpBE,QAASI,EAAMrC,MAAMiC,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAIA,SAAAS,GACvB,MAAM,CACFX,cAAe,SAACC,EAAMC,GAAP,OAAkBS,EAASC,IAAoBX,EAAMC,OAI7DM,CAA4CK,YAAiBf,EAAQgB","file":"static/js/2.8264ae05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__X-cF3\"};","import React from 'react';\r\nimport css from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name:ingredientName, \r\n                amount:props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                    textTransform: 'capitalize',\r\n                    display: 'inline-block',\r\n                    margin: '0 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding: '5px'\r\n                    }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n    <div className={css.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner />\r\n        if(!this.props.loading){\r\n            orders = this.props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id} \r\n                        ingredients={order.ingredients}\r\n                        price={order.price} />\r\n                ))\r\n        };\r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token,userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}